logminer sqls

-- connect to mockpost db using logmnr_user/oracle

select sys_context('USERENV', 'NLS_DATE_FORMAT') from dual ;

alter session set nls_date_format = 'dd/mm/rrrr hh24:mi:ss';


--check parameters (log mode, supplemental logging level)
SELECT DB_UNIQUE_NAME, LOG_MODE,
SUPPLEMENTAL_LOG_DATA_MIN,SUPPLEMENTAL_LOG_DATA_PK,SUPPLEMENTAL_LOG_DATA_UI,SUPPLEMENTAL_LOG_DATA_FK,SUPPLEMENTAL_LOG_DATA_ALL
FROM V$DATABASE;

SELECT * FROM dba_log_groups;
--check if any columns is not being logged
SELECT * FROM DBA_LOG_GROUP_COLUMNS; -- WHERE logging_property = 'NO LOG';

select * from v$archived_log; -- view archived log files
select * from v$logfile; -- view redo logs


--start logminer session base on starttime,  continuous mine and committed data
BEGIN
  DBMS_LOGMNR.START_LOGMNR(
    STARTTIME => '12/11/17 20:00:00', -- must set nls_date_format 
    ENDTIME => SYSDATE,
    OPTIONS => DBMS_LOGMNR.DICT_FROM_ONLINE_CATALOG + DBMS_LOGMNR.COMMITTED_DATA_ONLY + DBMS_LOGMNR.CONTINUOUS_MINE);
END;

select * from v$logmnr_logs; -- check what logfiles are added to logminer
SELECT * FROM v$logmnr_dictionary;
select * from V$LOGMNR_CONTENTS; -- logminer view to read the logfiles

-- show relevant info from logminer view
SELECT TIMESTAMP, USERNAME, (XIDUSN || '.' || XIDSLT || '.' || XIDSQN) AS XID, OPERATION, TABLE_NAME,
      SQL_REDO, SQL_UNDO
   FROM V$LOGMNR_CONTENTS WHERE username like 'FSC%';

-- get information for operations happeninig on phkl schema
SELECT TIMESTAMP, USERNAME, (XIDUSN || '.' || XIDSLT || '.' || XIDSQN) AS XID, OPERATION, TABLE_NAME,
      redo_value, SQL_REDO, SQL_UNDO
   FROM V$LOGMNR_CONTENTS WHERE seg_owner like 'FSCPHKL' AND OPERATION = 'UPDATE';   
   
-- stop logminer session
BEGIN
  DBMS_LOGMNR.END_LOGMNR();
END;








select name, first_time from v$archived_log; order by FIRST_TIME desc;



--------------

alter session set nls_date_format='DD-MON-YYYY HH24:MI:SS';
col first_change# format 99999999999999999999
col next_change# format 99999999999999999999
select  thread#,  first_time, next_time, first_change# ,next_change#, sequence#,
   next_change#-first_change# diff, round ((next_change#-first_change#)/(next_time-first_time)/24/60/60) rt
from (
select thread#, first_time, first_change#,next_time,  next_change#, sequence#,dest_id from v$archived_log
where next_time > sysdate-30 and dest_id=1
order by next_time
)
order by  first_time, thread#
/

----------------

select * from all_tab_modifications where table_owner like 'FSC%' and deletes <> 0;

select * from fscphk.boepisodeaccounttxn bb where trunc(entered_datetime) = trunc(sysdate-2);

select ora_rowscn, count(rowid)
from fscphk.bbpatientbed bb
group by ora_rowscn;

select  dbms_rowid.rowid_block_number(rowid) block_number,
        to_char(cast(scn_to_timestamp(ora_rowscn) as date),
          'DD/MM/YYYY HH24:MI:SS') ora_rowscn_date,
        count(*) 
from    fscphk.boepisodeaccounttxn
where trunc(entered_datetime) = trunc(sysdate-5)
group by
        dbms_rowid.rowid_block_number(rowid),
        to_char(cast(scn_to_timestamp(ora_rowscn) as date),
          'DD/MM/YYYY HH24:MI:SS');
          
          
select * from v$logmnr_contents;

SELECT DB_UNIQUE_NAME,
SUPPLEMENTAL_LOG_DATA_MIN,SUPPLEMENTAL_LOG_DATA_PK,SUPPLEMENTAL_LOG_DATA_UI,SUPPLEMENTAL_LOG_DATA_FK,SUPPLEMENTAL_LOG_DATA_ALL
FROM V$DATABASE;



SELECT NAME, FIRST_TIME FROM V$ARCHIVED_LOG
    WHERE SEQUENCE# = (SELECT MAX(SEQUENCE#) FROM V$ARCHIVED_LOG 
    WHERE DICTIONARY_BEGIN = 'YES');

select * from V$LOGMNR_CONTENTS;

sho parameter archive;

archive log list;

SELECT name, value, description FROM v$parameter WHERE 
name = 'compatible';

desc v$database;                
